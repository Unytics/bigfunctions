type: function_py
category: notify
author:
  name: Paul Marcombes
  url: https://www.linkedin.com/in/paul-marcombes
  avatar_url: "https://lh3.googleusercontent.com/a-/ACB-R5RDf2yxcw1p_IYLCKmiUIScreatDdhG8B83om6Ohw=s260"
description: Send email via gmail
arguments:
  - name: recipients
    type: string
  - name: subject
    type: string
  - name: body
    type: string
  - name: attachment_filename
    type: string
  - name: attachment_content
    type: string
output:
  name: success
  type: BOOL
examples:
  - description: "Send email without file attached"
    arguments:
      - "'contact@unytics.io'"
      - "'I love BigFunctions'"
      - "'Hey Paul, could you deploy more BigFunctions üôè?'"
      - "null"
      - "null"
    output: "true"
    region: ALL
  - description: "Send email with plain text file attached"
    arguments:
      - "'contact@unytics.io'"
      - "'I love BigFunctions'"
      - "'Hey Paul, could you deploy more BigFunctions üôè?'"
      - "'report.csv'"
      - "'col1,col2\\nval1,val2\\nval3,val4'"
    output: "true"
    region: ALL
  - description: "Send email with excel file attached"
    arguments:
      - "'contact@unytics.io'"
      - "'I love BigFunctions'"
      - "'Hey Paul, could you deploy more BigFunctions üôè?'"
      - "'report.xlsx'"
      - "(select {BIGFUNCTIONS_DATASET}.dump_to_excel('[{\"col1\": \"val1\", \"col2\": \"val2\"}, {\"col1\": \"val3\", \"col2\": \"val4\"}]'))"
    output: "true"
    region: ALL
code: |
  import base64
  import smtplib
  from email.mime.multipart import MIMEMultipart
  from email.mime.text import MIMEText
  from email.mime.base import MIMEBase
  from email.mime.application import MIMEApplication
  from email import encoders

  import google.cloud.secretmanager
  secret_manager = google.cloud.secretmanager.SecretManagerServiceClient()

  username = 'paul.marcombes@unytics.io'
  password = secret_manager.access_secret_version(
      name='projects/bigfunctions/secrets/unytics_gmail_password/versions/latest'
  ).payload.data.decode('UTF-8')
  smtp_server = 'smtp.gmail.com'
  smtp_port = 587

  msg = MIMEMultipart()
  msg['From'] = username
  msg['To'] = recipients
  msg['Subject'] = subject
  msg.attach(MIMEText(body, 'html'))

  if attachment_content:
      try:
          content_is_base64 = base64.b64encode(base64.b64decode(attachment_content)) == attachment_content.encode()
      except:
          content_is_base64 = False

      if content_is_base64:
          part = MIMEBase('application', "octet-stream")
          part.set_payload(base64.b64decode(attachment_content))
          encoders.encode_base64(part)
          part.add_header('Content-Disposition', f'attachment; filename={attachment_filename}')
          msg.attach(part)
      else:
          part = MIMEApplication(attachment_content.encode(), Name=attachment_filename)
          part['Content-Disposition'] = f'attachment; filename="{attachment_filename}"'
          msg.attach(part)

  smtpObj = smtplib.SMTP(smtp_server, smtp_port)
  smtpObj.ehlo()
  smtpObj.starttls()
  smtpObj.login(username, password)
  smtpObj.sendmail(username, msg['To'].split(","), msg.as_string())
  smtpObj.quit()
  return True
requirements: |
  google-cloud-secret-manager
quotas:
  max_rows_per_query: 10