type: function_js
category: transform_json
author:
  name: Sid Ali
  url: https://www.linkedin.com/company/esmoz/
  avatar_url: "https://esmoz.fr/wp-content/uploads/2022/03/logo_esmoz_40x20-1.png"
description: |
  Extract data from `json_string` using advanced json querying
  offered by [JMESPath](https://jmespath.org/).

  > *JMESPath Links:*
  >
  > - See [JMESPath Tutorial](https://jmespath.org/tutorial.html) for exhaustive `query` possibilities
  > - [GitHub of jmespath.js](https://github.com/jmespath/jmespath.js)
arguments:
  - name: json_string
    type: string
  - name: query
    type: string
output:
  name: result
  type: string
examples:
  - description: "Basic Query"
    arguments:
      - "'{\"foo\": [{\"first\": \"a\"}, {\"first\": \"c\"}]}'"
      - "'foo'"
    output: "[{\"first\": \"a\"}, {\"first\": \"c\"}]"
  - description: "Getting array sub-items"
    arguments:
      - "'{\"foo\": [{\"first\": \"a\"}, {\"first\": \"c\"}]}'"
      - "'foo[*].first'"
    output: "['a', 'c']"
  - description: "Slicing"
    arguments:
      - "'{\"foo\": [{\"first\": \"a\"}, {\"first\": \"c\"}]}'"
      - "'foo[:1].first'"
    output: "['a']"
  - description: "Projecting"
    arguments:
      - "'{\"foo\": [{\"first\": \"a\"}, {\"first\": \"c\"}]}'"
      - "'foo[*].{name: first}'"
    output: "[{\"name\": \"a\"}, {\"name\": \"c\"}]"
code: |
  try {
    obj = JSON.parse(json_string);
  }
  catch {
    throw('could not parse ' + json_string)
  }
  return JSON.stringify(jmespath.search(obj, query));
npm_packages:
  - jmespath@0.16.0
