type: function_py
category: convert_data_format
author:
  name: Guillaume Pivette from Neoxia
  url: https://www.linkedin.com/in/guillaume-pivette/
  avatar_url: "https://cdn-images-1.medium.com/v2/resize:fit:92/1*jHdQzX82eU5lyjBYp63NqQ@2x.png"
description: |
    Get the content of a website as a base64 string representaion of a pdf
arguments:
  - name: html
    type: string
output:
  name: pdf_base64
  type: string
examples:
  - description: "Get the string for a website"
    arguments:
      - '"https://github.com/unytics/bigfunctions"'
    output: 'JVBERi0xLjQK....'
    region: ALL
code: |
  import os
  import base64
  import tempfile
  with tempfile.TemporaryDirectory() as folder:
      hmtl_file = f'{folder}/in.html'
      pdf_file = f'{folder}/out.pdf'
      open(hmtl_file, 'w', encoding='utf-8').write(html)
      command = f"google-chrome-stable --headless --no-sandbox --disable-dev-shm-usage --print-to-pdf-no-header --print-to-pdf='{pdf_file}' 'file://{hmtl_file}'"
      os.system(command)
      pdf = open(pdf_file, 'rb').read()
  return base64.b64encode(pdf).decode()
additional_install_commands_in_dockerfile: |
  RUN export DEBIAN_FRONTEND=noninteractive
  RUN apt-get update
  RUN apt-get install --no-install-recommends --no-install-suggests --assume-yes \
    acl \
    curl \
    gnupg \
    fonts-liberation
  RUN curl -sL "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" > /tmp/chrome.deb
  RUN (dpkg -i /tmp/chrome.deb || apt-get install --no-install-recommends --no-install-suggests --assume-yes --fix-broken)
  RUN rm -rf /tmp/*
cloud_run:
  memory: 512Mi
  concurrency: 1
  max_instances: 10
quotas:
  max_rows_per_query: 10

